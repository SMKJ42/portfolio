import { Layout } from "@/components/Layout";
import { NextPageWithLayout } from "../_app";

const realtyHub: NextPageWithLayout = () => {
    return (
        <div className="w-full flex justify-center">
            <article className="lg:w-[700px] w-[300px] sm:w-[500px] m-4">
                <h1 className="w-full text-center text-3xl font-semibold">
                    Realty-Hub
                </h1>
                <section className="[&>h2]:text-2xl [&>h2]:font-semibold [&>*]:mb-2 [&>h3]:font-semibold [&>h3]:text-xl [&>h3]:ml-4">
                    <h2>Overview</h2>
                    <p>
                        For this project I have implemented a calculator for
                        providing key metrics to homeowners open to renting a
                        home either as a &apos;worst case&apos; scenario or as
                        an investment.
                    </p>
                    <p>
                        I have also created a custom CMS for people to write
                        articles on the site. It includes role based priviledges
                        and three different statuses for articles.
                    </p>
                </section>
                <section className="[&>h2]:text-2xl [&>h2]:font-semibold [&>*]:mb-2 [&>h3]:font-semibold [&>h3]:text-xl [&>h3]:ml-4">
                    <h2>Caculator</h2>
                    <h3>The Current State</h3>
                    <p>
                        I utilized redux as my store to provide reactivity to
                        outputs and persist data on page refresh. The store
                        logis is quite verbose, and am currently exploring ways
                        to simplify it.
                    </p>
                    <p>
                        Users can create an account and save different PODs to
                        persist data for later evaluation. The POD itself gives
                        some key metrics to the user such as cash flow, ROI, and
                        cap rate.
                    </p>
                    <h3>Future plans</h3>
                    <p>
                        I plan to create two more calculators, one for multi
                        family homes so that people can evaluate up to 4 units
                        at a time. Another for commercial properties up to any
                        number of units.
                    </p>
                    <p>
                        For the Single Family Home calculator I plan to hook
                        into an API that can give property specific metrics and
                        pull comparables so that hopefull homeowners can make an
                        thoroughly researched decision.
                    </p>
                    <p>
                        A key feature I hope to implement is an export to PDF
                        functionality that allows potential homeowners to show
                        banks how they have derisked an investment and show
                        competancy in real estate.
                    </p>
                </section>
                <section className="[&>h2]:text-2xl [&>h2]:font-semibold [&>*]:mb-2 [&>h3]:font-semibold [&>h3]:text-xl [&>h3]:ml-4">
                    <h2>Articles</h2>
                    <h3>The Current State</h3>
                    <p>
                        Articles are open to the public and I hope to optimize
                        the SEO of articles to boost customer traffic. Each
                        article has a unique URL that is dynamically generated
                        upon publication.
                    </p>
                    <p>
                        Articles are first given a status of &apos;draft&apos;
                        then once the author is satisfied with their work they
                        can be submitted for approval from an admin. Once the
                        Admin appoves, the article is published.
                    </p>
                    <p>
                        The Article itself is stored as HTML and is generated by
                        the Quill WYSIWYG type of API. I chose this approach
                        because I wanted to give authors the ability to
                        customize their articles with rich text.
                    </p>
                    <h3>Future plans</h3>
                    <p>
                        The main thing I am missing is a site map for search
                        engines to index my site. I have plans to build this out
                        as soon as I get a larger article base.
                    </p>
                    <p>
                        Another feature I would like to implement is images
                        embedded in articles. I have to do some more research on
                        my data sanitization proccess to ensure there is no
                        conflicts that could result in a bug down the road.
                    </p>
                </section>
                <section className="[&>h2]:text-2xl [&>h2]:font-semibold [&>*]:mb-2 [&>h3]:font-semibold [&>h3]:text-xl [&>h3]:ml-4">
                    <h2>Key Features of the Back End</h2>
                    <p>
                        I have set up a cron job that goes and pulls mortgage
                        rate averages from the St. Louis Fed. This allows users
                        to quickly get a dynamic datapoint without having to do
                        a google search themselves.
                    </p>
                    <p>
                        I have implemented the T3 stack with Clerk, TRPC, Zod,
                        and Prisma to manage permissions, type safety, and DB
                        schema. The Database is hosted on PlanetScale and is a
                        MySQL DB.
                    </p>
                </section>
            </article>
        </div>
    );
};

realtyHub.getLayout = (page) => {
    return <Layout>{page}</Layout>;
};

export default realtyHub;
